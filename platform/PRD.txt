Please implement DDD-based microservice architecture code for an event storming model-based domain using Spring Boot 3 and DDD Extension. The code must be implemented strictly based on the metadata provided below:

Platform Metadata:
{"_type":"BoundedContext","name":"platform","displayName":"플랫폼","aggregates":[{"_type":"Aggregate","name":"Book","displayName":"도서","aggregateRoot":{"_type":"AggregateRoot","fieldDescriptors":[{"_type":"FieldDescriptor","name":"id","className":"Long"},{"_type":"FieldDescriptor","name":"bookName","className":"String","displayName":"도서명"},{"_type":"FieldDescriptor","name":"category","className":"String","displayName":"카테고리"},{"_type":"FieldDescriptor","name":"isBestSeller","className":"Boolean","displayName":"베스트셀러여부"},{"_type":"FieldDescriptor","name":"authorName","className":"String","displayName":"작가명"}]},"events":[{"_type":"Event","name":"BookRegistered","displayName":"도서등록됨","fieldDescriptors":[{"_type":"FieldDescriptor","name":"id","className":"Long"},{"_type":"FieldDescriptor","name":"bookName","className":"String","displayName":"도서명"},{"_type":"FieldDescriptor","name":"category","className":"String","displayName":"카테고리"},{"_type":"FieldDescriptor","name":"isBestSeller","className":"Boolean","displayName":"베스트셀러여부"},{"_type":"FieldDescriptor","name":"bookContent","className":"String","displayName":"도서내용"}],"trigger":"@PostPersist","type":"Event"},{"_type":"Event","name":"BadgeGranted","displayName":"베스트 셀러 뱃지 부여됨","fieldDescriptors":[{"_type":"FieldDescriptor","name":"id","className":"Long"},{"_type":"FieldDescriptor","name":"bookName","className":"String","displayName":"도서명"},{"_type":"FieldDescriptor","name":"isBestSeller","className":"Boolean","displayName":"베스트셀러여부"},{"_type":"FieldDescriptor","name":"subscriptionCount","className":"Integer","displayName":"구독횟수"}],"trigger":"@PostPersist","type":"Event"}],"type":"Aggregate","lifeCycles":[{"trigger":"PostPersist","events":[{"_type":"Event","name":"BookRegistered","displayName":"도서등록됨","fieldDescriptors":[{"_type":"FieldDescriptor","name":"id","className":"Long"},{"_type":"FieldDescriptor","name":"bookName","className":"String","displayName":"도서명"},{"_type":"FieldDescriptor","name":"category","className":"String","displayName":"카테고리"},{"_type":"FieldDescriptor","name":"isBestSeller","className":"Boolean","displayName":"베스트셀러여부"},{"_type":"FieldDescriptor","name":"bookContent","className":"String","displayName":"도서내용"}],"trigger":"@PostPersist","type":"Event"},{"_type":"Event","name":"BadgeGranted","displayName":"베스트 셀러 뱃지 부여됨","fieldDescriptors":[{"_type":"FieldDescriptor","name":"id","className":"Long"},{"_type":"FieldDescriptor","name":"bookName","className":"String","displayName":"도서명"},{"_type":"FieldDescriptor","name":"isBestSeller","className":"Boolean","displayName":"베스트셀러여부"},{"_type":"FieldDescriptor","name":"subscriptionCount","className":"Integer","displayName":"구독횟수"}],"trigger":"@PostPersist","type":"Event"}]}]}],"policies":[{"_type":"Policy","name":"grant badge","displayName":"베스트셀러 뱃지 부여","type":"Policy","incomingRelations":[{"source":{"_type":"Event","name":"SubscriptionApplied","displayName":"구독신청됨","trigger":"@PostPersist","incomingRelations":[{"source":{"_type":"Command","name":"apply subscription","displayName":"구독 신청","isRestRepository":true,"controllerInfo":{"apiPath":"applysubscription","method":"PUT","fullApiPath":""},"restRepositoryInfo":{"method":"POST"},"trigger":"@PostPersist","type":"Command"}}],"type":"Event"}}]},{"_type":"Policy","name":"register book","displayName":"도서 등록","examples":[{"given":[{"name":"Book","type":"Aggregate","value":{"id":"N/A","bookName":"N/A","category":"N/A","isBestSeller":"N/A","authorName":"N/A"}}],"when":[{"name":"PublishingRequested","type":"Event","value":{"id":"1","title":"채식주의자","status":"DONE","content":"한 여자가 아파트 베란다에서 식물이 되고, 함께 살던 남자는 그녀를 화분에 심는 이야기"}}],"then":[{"name":"BookRegistered","type":"Event","value":{"id":"1","bookName":"채식주의자","category":"소설","isBestSeller":"N/A","bookContent":"한 여자가 아파트 베란다에서 식물이 되고, 함께 살던 남자는 그녀를 화분에 심는 이야기"}}]}],"incomingRelations":[{"source":{"_type":"Event","name":"PublishingRequested","displayName":"출간요청됨","trigger":"","incomingRelations":[{"source":{"_type":"Command","name":"request publish","displayName":"출간 요청","isRestRepository":false,"controllerInfo":{"apiPath":"requestpublish","method":"PUT","fullApiPath":""},"restRepositoryInfo":{"method":"PUT"},"trigger":"@PostPersist","type":"Command"}}],"type":"Event"}}],"type":"Policy"}]}
